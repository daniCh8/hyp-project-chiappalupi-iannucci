---
swagger: "2.0"
info:
  description: "This is the bookshop server for the Hypermedia Application 2019 project, made by Daniele Chiappalupi (daniele.chiappalupi@mail.polimi.it) and Elena Iannucci (elena.iannucci@mail.polimi.it)."
  version: "1.0.0"
  title: "hyp-project-chiappalupi-iannucci"
  contact:
    email: "daniele.chiappalupi@mail.polimi.it"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
- name: "book"
  description: "all about the books available in the bookshop."
- name: "author"
  description: "all about the authors of the books."
- name: "user"
  description: "operations on the users."
- name: "event"
  description: "events of presentation of the books."
- name: "cart"
  description: "cart of the users."
schemes:
- "https"
paths:
  /book:
    get:
      tags:
      - "book"
      summary: "Get all the books in the database"
      operationId: "getBooks"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
          examples:
            application/json:  {
              "ISBN": "1",
              "favourite": true,
              "name": "Comici Spaventati Guerrieri",
              "theme": "love",
              "genre": "mystery",
              "status": "available",
              "pictureURL": "https://images-eu.ssl-images-amazon.com/images/I/51PVDjr0qnL.jpg",
              "plot": "Comici Spaventati Guerrieri is a metropolitan \"recherche\", narrated as a blues that rythms movements and placements, separations and meetings, walks and runs, kung-fu fights and shots, sudden loves and sudden friendships, dialogues and monologues, visions and dreams. It remarks the infinite distance between center and outskirt. This is a novel that underlines the cynicism, the golden corruption and the lack of intelligence that rules nowadays.",
              "authors": [
                "Stefano Benni"
              ]
            }
        404:
          description: "No Books found in the database"
          schema:
            $ref: "#/definitions/ErrorMessage_NoObject"
      x-swagger-router-controller: "Book"
    post:
      tags:
      - "book"
      summary: "Add a new book to the bookshop"
      description: "Please note that the possible responses also include the default error ones defined by Swagger, such as 400 Bad Reqest."
      operationId: "addBook"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Book object that needs to be added to the shop"
        required: true
        schema:
          $ref: "#/definitions/BookWithAuthorsID"
      responses:
        200:
          description: "Successful operation."
          schema:
            $ref: "#/definitions/SuccessMessage"
        409:
          description: "Book can't be added: another book with the same ISBN has been found."
          schema:
            $ref: "#/definitions/ErrorMessage_Duplicate"
      x-swagger-router-controller: "Book"
  /book/getFavouriteBooks:
    get:
      tags:
      - "book"
      summary: "Finds our favourite books"
      description: "Returns an array containing all the books that has the mark \"favourite\" setted at true"
      operationId: "getFavouriteBooks"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
          examples:
            application/json:  {
              "ISBN": "1",
              "favourite": true,
              "name": "Comici Spaventati Guerrieri",
              "theme": "love",
              "genre": "mystery",
              "status": "available",
              "pictureURL": "https://images-eu.ssl-images-amazon.com/images/I/51PVDjr0qnL.jpg",
              "plot": "Comici Spaventati Guerrieri is a metropolitan \"recherche\", narrated as a blues that rythms movements and placements, separations and meetings, walks and runs, kung-fu fights and shots, sudden loves and sudden friendships, dialogues and monologues, visions and dreams. It remarks the infinite distance between center and outskirt. This is a novel that underlines the cynicism, the golden corruption and the lack of intelligence that rules nowadays.",
              "authors": [
                "Stefano Benni"
              ]
            }
        404:
          description: "No Books found in the database"
          schema:
            $ref: "#/definitions/ErrorMessage_NoObject"
      x-swagger-router-controller: "Book"
  /book/getBestsellers:
    get:
      tags:
      - "book"
      summary: "Finds the bestsellers"
      description: "Returns an array containing all the books that have sold the most, ordered from the bestseller on"
      operationId: "getBestsellers"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
          examples:
            application/json:  {
              "ISBN": "1",
              "favourite": true,
              "name": "Comici Spaventati Guerrieri",
              "theme": "love",
              "genre": "mystery",
              "status": "available",
              "pictureURL": "https://images-eu.ssl-images-amazon.com/images/I/51PVDjr0qnL.jpg",
              "plot": "Comici Spaventati Guerrieri is a metropolitan \"recherche\", narrated as a blues that rythms movements and placements, separations and meetings, walks and runs, kung-fu fights and shots, sudden loves and sudden friendships, dialogues and monologues, visions and dreams. It remarks the infinite distance between center and outskirt. This is a novel that underlines the cynicism, the golden corruption and the lack of intelligence that rules nowadays.",
              "authors": [
                "Stefano Benni"
              ]
            }
        404:
          description: "No sold book found in the database"
          schema:
            $ref: "#/definitions/ErrorMessage_NoObject"
      x-swagger-router-controller: "Book"
  /book/findBooksBy:
    get:
      tags:
      - "book"
      summary: "Finds Books from the parameters provided."
      description: "Depending on what is provided to this query, it will adapt to return the corresponding books. If no book matches the research, an empty array is provided (the last feature was an implementation choice due to front end developing).
                    The research features the non case sensitivity for both name of the book and of the author (as shown in the examples).
                    Please note that the possible responses also include the default error ones defined by Swagger, such as 400 Bad Reqest."
      operationId: "findBooksBy"
      produces: 
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Name to filter by"
        required: false
        type: "string"
        x-example: "comici sPaVeNtAtI guerrieri"
      - name: "author"
        in: "query"
        description: "Author to filter by"
        required: false
        type: "string"
        x-example: stefano BENNI
      - name: "genres"
        in: "query"
        description: "Genre to filter by"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "fantasy"
          - "science fiction"
          - "westerns"
          - "romance"
          - "thriller"
          - "mystery"
          - "detective story"
          - "dystopya"
          - "memoir"
          - "biography"
          - "play"
          - "musical"
          - "satire"
          - "haiku"
          - "horror"
          - "DIY"
          - "dictionary"
          - "young adult fiction"
          - "children's book"
          - "adult literature"
        x-example: "mystery"
      - name: "themes"
        in: "query"
        description: "Theme to filter by"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "love"
          - "death"
          - "good vs. evil"
          - "coming of age"
          - "power and corruption"
          - "survival"
          - "courage and heroism"
          - "prejudice"
          - "individual vs. society"
          - "war"
        x-example: "love"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
      x-swagger-router-controller: "Book"
  /book/{ISBN}:
    get:
      tags:
      - "book"
      summary: "Find a book by its ISBN."
      description: "Returns a single book. Please note that the possible responses also include the default error ones defined by Swagger, such as 400 Bad Reqest."
      operationId: "getBookByISBN"
      produces:
      - "application/json"
      parameters:
      - name: "ISBN"
        in: "path"
        description: "ISBN of the book to return"
        required: true
        type: "string"
        x-example: "1"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
          examples:
            application/json:  {
              "ISBN": "1",
              "favourite": true,
              "name": "Comici Spaventati Guerrieri",
              "theme": "love",
              "genre": "mystery",
              "status": "available",
              "pictureURL": "https://images-eu.ssl-images-amazon.com/images/I/51PVDjr0qnL.jpg",
              "plot": "Comici Spaventati Guerrieri is a metropolitan \"recherche\", narrated as a blues that rythms movements and placements, separations and meetings, walks and runs, kung-fu fights and shots, sudden loves and sudden friendships, dialogues and monologues, visions and dreams. It remarks the infinite distance between center and outskirt. This is a novel that underlines the cynicism, the golden corruption and the lack of intelligence that rules nowadays.",
              "authors": [
                "Stefano Benni"
              ]
            }
        404:
          description: "No Books found in the database"
          schema:
            $ref: "#/definitions/ErrorMessage_NoObject"
      x-swagger-router-controller: "Book"
    delete:
      tags:
      - "book"
      summary: "Deletes a book that has the ISBN provided."
      description: "Please note that the possible responses also include the default error ones defined by Swagger, such as 400 Bad Reqest."
      operationId: "deleteBook"
      produces:
      - "application/json"
      parameters:
      - name: "ISBN"
        in: "path"
        description: "ISBN of the book to delete"
        required: true
        type: "string"
        x-example: 17
      responses:
        200:
          description: "Successful operation."
          schema:
            $ref: "#/definitions/SuccessMessage"
        404:
          description: "No Books with this ISBN found in the database"
          schema:
            $ref: "#/definitions/ErrorMessage_NoObject"
      x-swagger-router-controller: "Book"
  /user:
    get:
      tags:
      - "user"
      summary: "User GET"
      description: ""
      operationId: "getUser"
      produces:
      - "application/json"
      responses:
        200:
          description: "succesfull login"
        401:
          description: "unauthorized"
    x-swagger-router-controller: "User"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Login"
      description: "Login with a form"
      operationId: "userLogin"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "formData"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      responses:
        200:
          description: "succesfull login"
        401:
          description: "unauthorized"
      x-swagger-router-controller: "User"
  /user/register:
    post:
      tags:
      - "user"
      summary: "Register"
      description: "Register into the store"
      operationId: "userRegister"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "succesfull registration"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "User"
  /user/logout:
    post:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "User"
  /author:
    get:
      tags:
        - "author"
      summary: "Returns all the authors in the database"
      operationId: "getAuthors"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuthorWithID"
          examples:
            application/json: {
              authorID: 1,
              name: "Stefano Benni",
              birthday: "1947-08-12T00:00:00.000Z",
              bio: "Stefano Benni is an Italian satirical writer, poet and journalist. His books have been translated into around 20 foreign languages and scored notable commercial success. 2.5 million copies of his books have been sold in Italy.",
              pictureURL: "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Stefano_Benni_par_Claude_Truong-Ngoc_sept_2013.jpg/220px-Stefano_Benni_par_Claude_Truong-Ngoc_sept_2013.jpg"
              }
        404:
          description: "No authors found in the database"
          schema:
            $ref: "#/definitions/ErrorMessage_NoObject"
      x-swagger-router-controller: "Author"
    post:
      tags:
      - "author"
      summary: "Add a new author to the database."
      description: "Adds a single author. Please note that the possible responses also include the default error ones defined by Swagger, such as 400 Bad Reqest."
      operationId: "addAuthor"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Author object that needs to be added to the db."
        required: true
        schema:
          $ref: "#/definitions/AuthorWithoutID"
      responses:
        200:
          description: "Successful operation."
          schema:
            $ref: "#/definitions/SuccessMessage"
        409:
          description: "Author can't be added: another author with the same name and date has been found."
          schema:
            $ref: "#/definitions/ErrorMessage_Duplicate"
      x-swagger-router-controller: "Author"
  /author/{ID}:
    get:
      tags:
      - "author"
      summary: "Find author by ID"
      description: "Returns a single author. Please note that the possible responses also include the default error ones defined by Swagger, such as 400 Bad Reqest."
      operationId: "getAuthorByID"
      produces:
      - "application/json"
      parameters:
      - name: "ID"
        in: "path"
        description: "ID of the author to return"
        required: true
        type: "integer"
        x-example: 1
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuthorWithID"
        404:
          description: "Author not found: invalid ID supplied. Got whenever an ID that corresponds to no author (e.g. -1) is supplied."
          schema:
            $ref: "#/definitions/ErrorMessage_NoObject"
      x-swagger-router-controller: "Author"
    delete:
      tags:
      - "author"
      summary: "Deletes an author."
      description: "Please note that the possible responses also include the default error ones defined by Swagger, such as 400 Bad Reqest."
      operationId: "deleteAuthor"
      produces:
      - "application/json"
      parameters:
      - name: "ID"
        in: "path"
        description: "ID of the author to delete."
        required: true
        type: "integer"
        x-example: 2
      responses:
        200:
          description: "Successful operation."
          schema:
            $ref: "#/definitions/SuccessMessage"
        404:
          description: "Author not found: invalid ID supplied. Got whenever an ID that corresponds to no author (e.g. -1) is supplied."
          schema:
            $ref: "#/definitions/ErrorMessage_NoObject"
      x-swagger-router-controller: "Author"
  /author/findByName:
    get:
      tags:
      - "author"
      summary: "Finds Authors by their names."
      description: "Returns an array of authors. Please note that the possible responses also include the default error ones defined by Swagger, such as 400 Bad Reqest.\ 
      If no name is provided, all the authors are returned. Multiple authors can be provided. The research is not case sensitive."
      operationId: "findAuthorsByName"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Author names to filter by."
        required: false
        type: "array"
        items:
          type: "string"
        x-example:  "stefano benni"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuthorWithID"
        404:
          description: "Author not found: invalid ID supplied. Got whenever a name that corresponds to no author is provided."
          schema: 
            $ref: "#/definitions/ErrorMessage_NoObject"
      x-swagger-router-controller: "Author"
  /event:
    get:
      tags:
      - "event"
      summary: "Get all the events in the database"
      description: ""
      operationId: "getEvents"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
      x-swagger-router-controller: "Event"
    post:
      tags:
      - "event"
      summary: "Add a new event to the bookshop"
      description: ""
      operationId: "addEvent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Event object that needs to be added to the shop"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Event"
  /event/{ID}:
    get:
      tags:
      - "event"
      summary: "Find an event by its ID"
      description: "Returns an event"
      operationId: "getEventByID"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "ID"
        in: "path"
        description: "ID of the event to find"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Event not found"
      x-swagger-router-controller: "Event"
    delete:
      tags:
      - "event"
      summary: "Deletes an event"
      description: ""
      operationId: "deleteEvent"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "ID"
        in: "path"
        description: "Event ID to delete"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /event/findByShop:
    get:
      tags:
      - "event"
      summary: "Finds events by the name of the shop where the book is presented"
      description: "Returns the events in the shop selected"
      operationId: "getEventByShop"
      produces:
      - "application/json"
      parameters:
      - name: "shop"
        in: "query"
        description: "name of the shop to filter by"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        404:
          description: "ISBN not found"
      x-swagger-router-controller: "Event"    
  /event/findByISBN:
    get:
      tags:
      - "event"
      summary: "Find an event by the ISBNs of the books presented in it"
      description: "Returns the events where the books were presented"
      operationId: "getEventByISBN"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "ISBN"
        in: "query"
        description: "ISBN of the book presentated in the event to find"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        404:
          description: "ISBN not found"
      x-swagger-router-controller: "Event"
  /cart:
    get:
      tags:
      - "cart"
      summary: "View the content of the cart"
      description: "Returns a list of Orders"
      operationId: "getCart"
      produces:
      - "application/json"
      responses:
        200:
          description: "succesful operartion"
          schema:
            $ref: "#/definitions/Order"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "Cart"
    post:
      tags:
      - "cart"
      summary: "Add a new order to the cart"
      description: ""
      operationId: "addOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Order object that needs to be added to the cart"
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        200:
          description: "successful operation"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "Cart"
    delete:
      tags:
      - "cart"
      summary: "Clears the cart"
      description: ""
      operationId: "clearCart"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
      x-swagger-router-controller: "Cart"
  /cart/{ISBN}:
    delete:
      tags:
      - "cart"
      summary: "Deletes an order"
      description: ""
      operationId: "deleteOrder"
      produces:
      - "application/json"
      parameters:
      - name: "ISBN"
        in: "path"
        description: "ISBN of the book to remove from the cart"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid ISBN supplied"
      x-swagger-router-controller: "Cart"
  /cart/updateBookQuantity:
    post:
      tags:
      - "cart"
      summary: "updates the quantity of a book in the cart"
      description: ""
      operationId: "updateBookQuantity"
      produces:
      - "application/json"
      parameters:
      - name: "ISBN"
        in: "query"
        description: "ISBN of the book to update the quantity in the cart"
        required: true
        type: "string"
      - name: "quantity"
        in: "query"
        description: "new quantity of the book"
        required: true
        type: "integer"
      responses:
        400:
          description: "Invalid ISBN supplied"
      x-swagger-router-controller: "Cart"
  /cart/checkout:
    post:
      tags:
      - "cart"
      summary: "Checks out the orders in the cart"
      description: ""
      operationId: "checkout"
      produces:
      - "application/json"
      responses:
        200:
          description: "Success"
      x-swagger-router-controller: "Cart"
definitions:
  SuccessMessage:
    type: "object"
    properties:
      success:
        type: "boolean"
    example:
      success: true
    required:
      - success
  ErrorMessage_Duplicate:
    type: "object"
    properties:
      success:
        type: "boolean"
      errorMessage:
        type: "string"
    example:
      success: false
      errorMessage: "Found another object with same properties."
    required:
      - success
      - errorMessage
  ErrorMessage_NoObject:
    type: "object"
    properties:
      success:
        type: "boolean"
      errorMessage:
        type: "string"
    example:
      success: false
      errorMessage: "No objects of this kind found in the database."
    required:
      - success
      - errorMessage
  Cart:
    type: "object"
    properties:
      username:
        type: "string"
      sessionID:
        type: "string"
      orders:
        type: "array"
        items:
          $ref: "#/definitions/Order"
    title: "Cart"
    description: "Order for books"
  User:
    type: "object"
    properties:
      username:
        type: "string"
        example: "daniCh"
      firstName:
        type: "string"
        example: "Daniele"
      lastName:
        type: "string"
        example: "Chiappalupi"
      email:
        type: "string"
        example: "daniele.chiappalupi@mail.polimi.it"
      password:
        type: "string"
        example: "barbagianni"
    example:
      firstName: "Daniele"
      lastName: "Chiappalupi"
      password: "barbagianni"
      email: "daniele.chiappalupi@mail.polimi.it"
      username: "daniCh"
  Order:
    type: "object"
    properties:
      ISBN:
        type: "string"
        example: "9780330508117"
      shop:
        type: "string"
        example: "La Feltrinelli"
        description: "fisical shop name"
      username:
        type: "string"
        example: "daniCh"
        description: "user username"
      quantity:
        type: "integer"
        example: 8
        description: "quantity of books reserved"
    example:
      shop: "La Feltrinelli"
      quantity: 8
      ISBN: "9780330508117"
      username: "daniCh"
  BookWithAuthorsID:
    type: "object"
    properties:
      favourite: 
        type: "boolean"
      ISBN:
        type: "string"
      name:
        type: "string"
      theme:
        type: "string"
        enum:
        - "love"
        - "death"
        - "good vs. evil"
        - "coming of age"
        - "power and corruption"
        - "survival"
        - "courage and heroism"
        - "prejudice"
        - "individual vs. society"
        - "war"
      genre:
        type: "string"
        enum:
        - "fantasy"
        - "science fiction"
        - "westerns"
        - "romance"
        - "thriller"
        - "mystery"
        - "detective story"
        - "dystopya"
        - "memoir"
        - "biography"
        - "play"
        - "musical"
        - "satire"
        - "haiku"
        - "horror"
        - "DIY"
        - "dictionary"
        - "young adult fiction"
        - "children's book"
        - "adult literature"
      authors:
        type: "array"
        description: "array of authors names"
        items:
          type: "string"
      status:
        type: "string"
      pictureURL:
        type: "string"
      plot:
        type: "string"
    example:
      ISBN: "17"
      favourite: true
      name: "The Hitchhiker's Guide to the Galaxy"
      theme: "individual vs. society"
      genre: "mystery"
      status: "available"
      pictureURL: "https://i.guim.co.uk/img/static/sys-images/Guardian/Pix/pictures/2015/6/25/1435245979235/047c9878-9845-473c-9635-5f32545746b0-1355x2040.jpeg?width=700&quality=85&auto=format&fit=max&s=606433bda33c8c27c5ebd7ba85900473"
      plot: "Arthur Dent (Martin Freeman) is trying to prevent his house from being bulldozed when his friend Ford Prefect (Mos Def) whisks him into outer space."
      authors: ["24"]
    required:
      - ISBN
      - favourite
      - name
      - theme
      - genre
      - status
      - pictureURL
      - plot
      - authors
  Book:
    type: "object"
    properties:
      favourite: 
        type: "boolean"
      ISBN:
        type: "string"
      name:
        type: "string"
      theme:
        type: "string"
        enum:
        - "love"
        - "death"
        - "good vs. evil"
        - "coming of age"
        - "power and corruption"
        - "survival"
        - "courage and heroism"
        - "prejudice"
        - "individual vs. society"
        - "war"
      genre:
        type: "string"
        enum:
        - "fantasy"
        - "science fiction"
        - "westerns"
        - "romance"
        - "thriller"
        - "mystery"
        - "detective story"
        - "dystopya"
        - "memoir"
        - "biography"
        - "play"
        - "musical"
        - "satire"
        - "haiku"
        - "horror"
        - "DIY"
        - "dictionary"
        - "young adult fiction"
        - "children's book"
        - "adult literature"
      authors:
        type: "array"
        description: "array of authors names"
        items:
          type: "string"
      status:
        type: "string"
      pictureURL:
        type: "string"
      plot:
        type: "string"
    example:
      ISBN: "1"
      favourite: true
      name: "Comici Spaventati Guerrieri"
      theme: "love"
      genre: "mystery"
      status: "available"
      pictureURL: "https://images-eu.ssl-images-amazon.com/images/I/51PVDjr0qnL.jpg"
      plot: "Comici Spaventati Guerrieri is a metropolitan \"recherche\", narrated as a blues that rythms movements and placements, separations and meetings, walks and runs, kung-fu fights and shots, sudden loves and sudden friendships, dialogues and monologues, visions and dreams. It remarks the infinite distance between center and outskirt. This is a novel that underlines the cynicism, the golden corruption and the lack of intelligence that rules nowadays."
      authors: ["Stefano Benni"]
    required:
      - ISBN
      - favourite
      - name
      - theme
      - genre
      - status
      - pictureURL
      - plot
      - authors
  AuthorWithID:
    type: "object"
    properties:
      authorID:
        type: "integer"
      name:
        type: "string"
      birthday:
        type: "string"
      bio:
        type: "string"
      pictureURL:
        type: "string"
    example:
      authorID: 1
      name: "Stefano Benni"
      birthday: "1947-08-11T22:00:00.000Z"
      bio: "Stefano Benni is an Italian satirical writer, poet and journalist. His books have been translated into around 20 foreign languages and scored notable commercial success. 2.5 million copies of his books have been sold in Italy."
      pictureURL: "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Stefano_Benni_par_Claude_Truong-Ngoc_sept_2013.jpg/220px-Stefano_Benni_par_Claude_Truong-Ngoc_sept_2013.jpg"
    required:
      - authorID
      - name
      - birthday
      - bio
      - pictureURL
  AuthorWithoutID:
    type: "object"
    properties:
      name:
        type: "string"
      birthday:
        type: "string"
      bio:
        type: "string"
      pictureURL:
        type: "string"
    example:
        name: "Douglas Adams"
        birthday: "1952-03-11"
        bio: "Douglas Noel Adams (11 March 1952 – 11 May 2001) was an English author, scriptwriter, essayist, humorist, satirist and dramatist."
        pictureURL: "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c0/Douglas_adams_portrait_cropped.jpg/220px-Douglas_adams_portrait_cropped.jpg"    
    required:
      - name
      - birthday
      - bio
      - pictureURL
  Event:
    type: "object"
    properties:
      ID:
        type: "string"
        example: "42"
        description: "event identifier code"
      ISBN:
        type: "string"
        example: "9780330508117"
      shop:
        type: "string"
        example: "La Feltrinelli"
    example:
      shop: "La Feltrinelli"
      ISBN: "9780330508117"
      ID: "42"